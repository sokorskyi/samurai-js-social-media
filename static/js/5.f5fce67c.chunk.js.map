{"version":3,"sources":["hoc/withGlobalError.jsx","util/formValidations.js","hoc/withFormField/withFormField.jsx","components/UI/FormFields/FormFields.jsx","hoc/withFormField/withFormField.module.css","hoc/withAuth.jsx","components/MainContent/Profile/ProfileInfo/ProfileInfo.module.css","components/MainContent/Profile/Profile.module.css","components/MainContent/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","components/MainContent/Profile/PostList/PostList.module.css","components/MainContent/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/MainContent/Profile/ProfileInfo/ProfileInfoForm.jsx","components/MainContent/Profile/ProfileInfo/ProfileDescription.jsx","components/MainContent/Profile/ProfileInfo/ProfileAvatar.jsx","components/MainContent/Profile/ProfileInfo/ProfileInfo.jsx","components/MainContent/Profile/PostList/PostForm.jsx","components/MainContent/Profile/PostList/PostList.jsx","components/MainContent/Profile/Profile.jsx","components/MainContent/Profile/ProfileWithAuth.jsx","components/MainContent/Profile/ProfileContainer.jsx","../node_modules/redux-form/es/FormSection.js"],"names":["mapStateToProps","state","globalError","selectApp","withGlobalError","WrappedComponent","connect","setGlobalError","_ref","props","React","createElement","Fragment","ReactModal","isOpen","onRequestClose","style","color","required","value","length","email","test","maxLength","max","concat","minLength","min","withFormField","WithFormFieldWrapper","input","meta","touched","error","fieldClass","cl","field","Object","assign","className","errorMsg","displayName","getComponentDisplayName","InputFormField","TextAreaFormField","module","exports","authorizedUserId","selectAuthorizedUserId","isFetchingLogout","selectAuth","withAuth","WithAuthWrapper","Preloader","Redirect","to","mapDispatchToProps","updateProfileStatus","compose","isFetchingStatus","selectProfile","status","isMyOwnProfile","updatingStatusError","isEdittingMode","setIsEdittingMode","useState","inputStatus","setInputStatus","onDoubleClick","autoFocus","onChange","e","target","actionButtons","onClick","stopPropagation","ContactForm","contacts","keys","map","contact","key","contactItem","capitalizeFirstLetter","Field","name","type","component","reduxForm","form","PROFILE_FORM","_ref2","handleSubmit","isUpdatingProfile","onDisableEdittingMode","onSubmit","validate","FormSection","ContactItemInfo","contactField","contactValue","arguments","undefined","ProfileDescription","profileInfo","onEnableEdittingMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","some","contactKey","profileAvatar","isUpdatingAvatar","updateProfileAvatar","avatar","src","files","ProfileInfo","PureComponent","constructor","this","setState","data","updateProfile","then","render","photos","userId","ProfileAvatar","ProfileStatus","profileDescription","ProfileInfoForm","initialValues","maxLength20","PostForm","memo","pristine","invalid","disabled","POST_FORM","PostItem","content","likesCount","item","likes","PostList","posts","addPost","postList","formData","post","_ref3","id","Profile","isFetchingProfile","PostLists","ProfileWithAuth","ProfileContainer","Component","componentDidMount","_initProfile","componentDidUpdate","prevProps","_prevProps$match$para","_this$props$match$par","match","params","_getUserId","getProfile","getProfileStatus","_getUrlId","_this$props$match$par2","withRouter","_Component","_this","call","_reduxForm","Error","_inheritsLoose","prototype","_this$props","children","rest","_objectWithoutPropertiesLoose","isValidElement","ReduxFormContext","Provider","_extends","sectionPrefix","prefixName","propTypes","PropTypes","string","isRequired","validateComponentProp","defaultProps","withReduxForm"],"mappings":"0HAAA,sDAMA,MAAMA,EAAmBC,IAAK,CAC5BC,YAAaC,YAAUF,GAAOC,cAoBjBE,IAjBUC,GAahBC,YAAQN,EAAiB,CAACO,oBAA1BD,CAZkBE,IAA8C,IAA7C,YAACN,EAAW,eAAEK,KAAmBE,GAAMD,EAC/D,OAAOE,IAAAC,cAAAD,IAAAE,SAAA,KACLF,IAAAC,cAACE,IAAU,CACTC,SAAUZ,EACVa,eAAgBA,IAAMR,EAAe,OAErCG,IAAAC,cAAA,MAAIK,MAAO,CAACC,MAAO,QAASf,IAE9BQ,IAAAC,cAACN,EAAqBI,O,iCCnB5B,wIAAO,MAAMS,EAAYC,IACX,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,QAAS,KAAO,oBAOnBC,EAASF,GACbA,IAAU,4CAA4CG,KAAKH,GAAS,yBAA2B,KAG3FI,EAAaC,GAASL,GAC1BA,EAAMC,QAAUI,EAAM,KAAI,sBAAAC,OAAyBD,EAAG,eAGlDE,EAAaC,GAASR,GAC1BA,EAAMC,QAAUO,EAAM,KAAI,8BAAAF,OAAiCE,EAAG,gB,kJCgBxDC,MA5BQvB,IACrB,MAAMwB,EAAuBrB,IAItB,IAJuB,MAC5BsB,EACAC,MAAM,QAAEC,EAAO,MAAEC,MACdxB,GACJD,EACK0B,EAAaC,IAAGC,MAKpB,OAJGJ,GAAWC,IACZC,GAAU,IAAAT,OAAQU,IAAGF,QAIrBvB,IAAAC,cAAA,WACED,IAAAC,cAACN,EAAgBgC,OAAAC,OAAA,CAACC,UAAWL,GAAgBJ,EAAWrB,IAEtDuB,GAAWC,GACRvB,IAAAC,cAAA,OAAK4B,UAAWJ,IAAGK,UACjBP,KAQb,OAFAJ,EAAqBY,YAAW,wBAAAhB,OAA2BiB,YAAwBrC,GAAiB,KAE7FwB,GC3BF,MAAMc,EAAiBf,EAAenB,GAAUC,IAAAC,cAAA,QAAWF,IACrDmC,EAAoBhB,EAAenB,GAAUC,IAAAC,cAAA,WAAcF,K,oBCHxEoC,EAAOC,QAAU,CAAC,MAAQ,6BAA6B,MAAQ,6BAA6B,SAAW,kC,iCCDvG,8FAOA,MAAM9C,EAAmBC,IAAK,CAC5B8C,iBAAkBC,YAAuB/C,GACzCgD,iBAAkBC,YAAWjD,GAAOgD,mBAGzBE,EAAY9C,IACvB,MAAM+C,EAAmB3C,GACnBA,EAAMsC,iBAEPtC,EAAMwC,iBAAyBvC,IAAAC,cAAC0C,IAAS,MAErC3C,IAAAC,cAACN,EAAqBI,GAJMC,IAAAC,cAAC2C,IAAQ,CAACC,GAAG,WAQlD,OAFAH,EAAgBX,YAAW,mBAAAhB,OAAsBiB,YAAwBrC,GAAiB,KAEnFC,YAAQN,EAARM,CAAyB8C,K,oBCrBlCP,EAAOC,QAAU,CAAC,YAAc,iCAAiC,OAAS,4BAA4B,OAAS,4BAA4B,YAAc,iCAAiC,mBAAqB,0C,oBCA/MD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,OAAS,wBAAwB,KAAO,wB,oBCA3FD,EAAOC,QAAU,CAAC,cAAgB,uC,oBCAlCD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,KAAO,uBAAuB,MAAQ,0B,yICM9F,MA2DMU,EAAqB,CACzBC,yBAGaC,kBACbpD,YATuBL,IAAK,CAC5B0D,iBAAkBC,YAAc3D,GAAO0D,mBAQdH,GADZE,CA/DOlD,IAA2F,IAA1F,OAACqD,EAAM,iBAAEF,EAAgB,eAAEG,EAAc,oBAAEC,EAAmB,oBAAEN,GAAoBjD,EACzG,MAAOwD,EAAgBC,GAAqBC,oBAAS,IAC9CC,EAAaC,GAAkBF,mBAASL,GA0B/C,OAAGF,EAAyBjD,IAAAC,cAAC0C,IAAS,MAGpC3C,IAAAC,cAAA,OAAK0D,cA3BeA,KACjBP,GACDG,GAAkB,KA0BlBvD,IAAAC,cAAA,SAAG,mBAAoB,IAErBqD,EACItD,IAAAC,cAAAD,IAAAE,SAAA,KACAF,IAAAC,cAAA,SAAO2D,WAAS,EAACC,SA1BHC,IACtBJ,EAAeI,EAAEC,OAAOtD,QAyB2BA,MAAOgD,IAClDzD,IAAAC,cAAA,OAAK4B,UAAWJ,IAAGuC,eACjBhE,IAAAC,cAAA,UAAQgE,QAxBEH,IACpBA,EAAEI,kBACCT,IAAgBN,GACjBJ,EAAoBU,GAEtBF,GAAkB,KAmBuB,QAC/BvD,IAAAC,cAAA,UAAQgE,QAjBIH,IACtBA,EAAEI,kBACFX,GAAkB,GAClBG,EAAeP,KAc4B,YAGnCnD,IAAAC,cAAA,YACDkD,GAAU,SAGZE,GACDrD,IAAAC,cAAA,WACED,IAAAC,cAAA,QAAMK,MAAO,CAACC,MAAO,QAAS8C,O,kEC9CxC,MAAMc,EAAcrE,IAAiB,IAAhB,SAACsE,GAAStE,EAC7B,OAAO6B,OAAO0C,KAAKD,GAAUE,IAAIC,GAC/BvE,IAAAC,cAAA,OAAKuE,IAAKD,EAAS1C,UAAWJ,IAAGgD,aAC/BzE,IAAAC,cAAA,SAAIyE,YAAsBH,IAC1BvE,IAAAC,cAAC0E,IAAK,CAACC,KAAML,EAASM,KAAK,OAAOC,UAAW7C,SAuDpC8C,kBAAU,CACvBC,KAAMC,KADOF,CAlDSG,IAA0F,IAAzF,aAACC,EAAY,MAAE5D,EAAK,SAAE6C,EAAQ,kBAAEgB,EAAiB,sBAAEC,KAA0BtF,GAAMmF,EAC1G,OACGE,EA4CCpF,IAAAC,cAAC0C,IAAS,MA5CS3C,IAAAC,cAAA,QAAMqF,SAAUH,GACnCnF,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAG,cAGHD,IAAAC,cAAC0E,IAAK,CAACC,KAAK,WAAWW,SAAU,CAAC/E,KAAWqE,KAAK,OAAOC,UAAW7C,OAEtEjC,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAG,aAGHD,IAAAC,cAAC0E,IAAK,CAACC,KAAK,UAAUW,SAAU,CAAC/E,KAAWqE,KAAK,OAAOC,UAAW7C,OAErEjC,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAG,sBAGHD,IAAAC,cAAC0E,IAAK,CAACC,KAAK,iBAAiBC,KAAK,WAAWC,UAAW7C,OAE1DjC,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAG,wBAGHD,IAAAC,cAAC0E,IAAK,CAACC,KAAK,4BAA4BW,SAAU,CAAC/E,KAAWqE,KAAK,OAAOC,UAAW5C,OAEvFlC,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAG,aAGHD,IAAAC,cAACuF,IAAW,CAACZ,KAAK,YAChB5E,IAAAC,cAACkE,EAAW,CAACC,SAAUA,MAG3BpE,IAAAC,cAAA,WACED,IAAAC,cAAA,cAAQ,gBACRD,IAAAC,cAAA,UAAQgE,QAAUH,IAChBA,EAAEI,kBACFmB,MACC,WAEJ9D,GAASvB,IAAAC,cAAA,OAAK4B,UAAU,cACtBN,MCzDT,MAAMkE,EAAkB,WAAwC,IAAvC,aAACC,EAAY,aAAEC,GAAaC,UAAAlF,OAAA,QAAAmF,IAAAD,UAAA,GAAAA,UAAA,GAAG,GACtD,OACED,GAAgB3F,IAAAC,cAAA,OAAK4B,UAAWJ,IAAGgD,aACjCzE,IAAAC,cAAA,SAAIyE,YAAsBgB,GAAc,MACvCC,IAuCQG,MAlCYhG,IAA0D,IAAzD,YAACiG,EAAW,eAAE3C,EAAc,qBAAE4C,GAAqBlG,EAC7E,MAAM,SAAEmG,EAAQ,eAAEC,EAAc,0BAAEC,EAAyB,SAAE/B,EAAQ,QAAEgC,GAAYL,EAEnF,OACE/F,IAAAC,cAAA,WACGgG,GAAajG,IAAAC,cAAA,WACZD,IAAAC,cAAA,SAAG,eACFgG,GAEFG,GAAYpG,IAAAC,cAAA,WACXD,IAAAC,cAAA,SAAG,cACFmG,GAEHpG,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAG,uBACFiG,EAAiB,MAAQ,MAE3BC,GAA8BnG,IAAAC,cAAA,WAC3BD,IAAAC,cAAA,SAAG,4BACFkG,GAGHxE,OAAO0C,KAAKD,GAAUiC,KAAKC,GAAclC,EAASkC,KAAgBtG,IAAAC,cAAA,WAChED,IAAAC,cAAA,SAAG,cACF0B,OAAO0C,KAAKD,GAAUE,IAAKgC,GAAetG,IAAAC,cAACwF,EAAe,CAACjB,IAAK8B,EAAYZ,aAAcY,EAAYX,aAAcvB,EAASkC,OAGlIlD,GAAkBpD,IAAAC,cAAA,WAChBD,IAAAC,cAAA,UAAQgE,QAAS+B,GAAuB,mB,iBCTjCpG,kBALUL,IAAK,CAC5BgH,cAAerD,YAAc3D,GAAOgH,cACpCC,iBAAkBtD,YAAc3D,GAAOiH,mBAGD,CAACC,yBAA1B7G,CAxBOE,IAA6E,IAA5E,cAACyG,EAAa,iBAAEC,EAAgB,oBAAEC,EAAmB,eAAErD,GAAetD,EAC3F,OAAG0G,EAAyBxG,IAAAC,cAAC0C,IAAS,MAGpC3C,IAAAC,cAAA,OAAK4B,UAAWJ,IAAGiF,QACnB1G,IAAAC,cAAA,OAAK0G,IAAKJ,GAAiBG,MAEzBtD,GAAkBpD,IAAAC,cAAA,WAChBD,IAAAC,cAAA,SAAO4E,KAAK,OAAOhB,SAAWC,IACzBA,EAAEC,OAAO6C,MAAM,IAChBH,EAAoB3C,EAAEC,OAAO6C,MAAM,WCH/C,MAAMC,UAAoBC,gBAAcC,cAAA,SAAAnB,WAAA,KACtCrG,MAAQ,CACN+D,gBAAgB,GACjB,KAED0C,qBAAuB,KACrBgB,KAAKC,SAAS,CACZ3D,gBAAgB,KAEnB,KAED+B,sBAAwB,KACtB2B,KAAKC,SAAS,CACZ3D,gBAAgB,KAEnB,KAEDgC,SAAY4B,IACVF,KAAKjH,MAAMoH,cAAcD,GAAME,KAAK,KAClCJ,KAAKC,SAAS,CAAC3D,gBAAgB,OAKnC+D,SACE,MAAOtB,aAAa,OAACuB,KAAWvB,GAAY,OAAE5C,EAAM,iBAAEd,EAAgB,kBAAE+C,EAAiB,oBAAE/B,GAAuB2D,KAAKjH,MACjHqD,EAAiBf,IAAqB0D,EAAYwB,QAClD,eAAEjE,GAAmB0D,KAAKzH,MAGhC,OACES,IAAAC,cAAAD,IAAAE,SAAA,KACIF,IAAAC,cAAA,OAAK4B,UAAWJ,IAAGsE,aACjB/F,IAAAC,cAACuH,EAAa,CAACpE,eAAgBA,IAC/BpD,IAAAC,cAAA,WACED,IAAAC,cAACwH,EAAa,CAACjD,IAAG,GAAAzD,OAAKoC,GAAMpC,OAAGsC,GAAuB,IAAMA,oBAAqBA,EAAqBF,OAAQA,EAAQC,eAAgBA,IACvIpD,IAAAC,cAAA,OAAK4B,UAAWJ,IAAGiG,oBAEfpE,EACEtD,IAAAC,cAAC0H,EAAe,CAACvD,SAAU2B,EAAY3B,SAAUiB,sBAAuB2B,KAAK3B,sBAAuBD,kBAAmBA,EAAmBE,SAAU0B,KAAK1B,SAAUsC,cAAe7B,IAClL/F,IAAAC,cAAC6F,EAAkB,CAAC1C,eAAgBA,EAAgB4C,qBAAsBgB,KAAKhB,qBAAsBD,YAAaA,SAoBvH/C,kBACbpD,YATuBL,IAAK,CAC5BwG,YAAa7C,YAAc3D,GAAOwG,YAClCX,kBAAmBlC,YAAc3D,GAAO6F,kBACxC/C,iBAAkBC,YAAuB/C,GACzC4D,OAAQD,YAAc3D,GAAO4D,OAC7BE,oBAAqBH,YAAc3D,GAAO8D,sBAIjB,CAAC8D,oBADbnE,CAEb6D,G,kBCvEF,MAAMgB,EAAchH,YAAU,IAE9B,IAAIiH,EAAWC,eAAKjI,IAAwC,IAAvC,aAACqF,EAAY,SAAE6C,EAAQ,QAAEC,GAAQnI,EACpD,OACEE,IAAAC,cAAA,QAAMqF,SAAUH,GACdnF,IAAAC,cAAA,WACED,IAAAC,cAAC0E,IAAK,CAACY,SAAU,CAAC/E,IAAUqH,GAAchD,KAAK,OAAOD,KAAK,OAAOE,UAAW7C,OAE/EjC,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAQiI,SAAUF,GAAYC,GAAS,gBAM/CH,EAAW/C,YAAU,CACnBC,KAAMmD,KADGpD,CAER+C,GAEYA,QClBf,MAAMM,EAAWtI,IAA4B,IAA3B,QAACuI,EAAO,WAAEC,GAAWxI,EACrC,OACEE,IAAAC,cAAA,OAAK4B,UAAWJ,IAAG8G,MACjBvI,IAAAC,cAAA,OAAK0G,IAAI,uLACR0B,EACDrI,IAAAC,cAAA,OAAK4B,UAAWJ,IAAG+G,OAAO,SACjBF,KAOTG,EAAWV,eAAK7C,IAAuB,IAAtB,MAACwD,EAAK,QAAEC,GAAQzD,EAKrC,OACElF,IAAAC,cAAA,OAAK4B,UAAWJ,IAAGmH,UACjB5I,IAAAC,cAAA,UAAI,YAGJD,IAAAC,cAAC6H,EAAQ,CAACxC,SATIuD,IAChBF,EAAQE,EAASC,SASdJ,EAAMpE,IAAIyE,IAAA,IAAC,QAACV,EAAO,WAAEC,EAAU,GAAEU,GAAGD,EAAA,OAAK/I,IAAAC,cAACmI,EAAQ,CAACC,QAASA,EAASC,WAAYA,EAAY9D,IAAKwE,SASnGlG,EAAqB,CACzB6F,aAGa/I,kBARUL,IAAK,CAC5BmJ,MAAOxF,YAAc3D,GAAOmJ,QAOU5F,EAAzBlD,CAA6C6I,GC1B7CQ,MAXCnJ,IAAuC,IAAtC,kBAACoJ,EAAiB,YAAEnD,GAAYjG,EAE/C,OACEoJ,IAAsBnD,EAAc/F,IAAAC,cAAC0C,IAAS,MAC5C3C,IAAAC,cAAA,WACED,IAAAC,cAAC4G,EAAW,MACZ7G,IAAAC,cAACkJ,EAAS,Q,kBCRHC,MAFS3G,YAASwG,G,SCSjC,MAAMI,UAAyBrJ,IAAMsJ,UAEnCC,oBACEvC,KAAKwC,eAGPC,mBAAmBC,GAAY,IAADC,EAAAC,GACH,QAAtBD,EAAAD,EAAUG,MAAMC,cAAM,IAAAH,OAAA,EAAtBA,EAAwBX,OAA8B,QAA5BY,EAAK5C,KAAKjH,MAAM8J,MAAMC,cAAM,IAAAF,OAAA,EAAvBA,EAAyBZ,KACzDhC,KAAKwC,eAITA,eACE,MAAMjC,EAASP,KAAK+C,aACjBxC,IACDP,KAAKjH,MAAMiK,WAAWzC,GACtBP,KAAKjH,MAAMkK,iBAAiB1C,IAIhC2C,YAAa,IAADC,EACV,OAA8B,QAA9BA,EAAOnD,KAAKjH,MAAM8J,MAAMC,cAAM,IAAAK,OAAA,EAAvBA,EAAyBnB,GAGlCe,aACE,IAAIxC,EAASP,KAAKkD,YAIlB,OAHI3C,IACFA,EAASP,KAAKjH,MAAMsC,kBAEfkF,EAGTF,SACE,MAAM,iBAAChF,EAAgB,WAAE2H,EAAU,iBAAEC,KAAqBlK,GAASiH,KAAKjH,MACxE,OACEiH,KAAKkD,YACHlK,IAAAC,cAACgJ,EAAYlJ,GACbC,IAAAC,cAACmJ,EAAoBrJ,IAK7B,MAMM+C,EAAqB,CACzBkH,eACAC,sBAGajH,sBACbtD,IACA0K,IACAxK,YAduBL,IAAK,CAC5B2J,kBAAmBhG,YAAc3D,GAAO2J,kBACxCnD,YAAa7C,YAAc3D,GAAOwG,YAClC1D,iBAAkBC,YAAuB/C,KAWhBuD,GAHZE,CAIbqG,I,gCCrEF,mHASI7D,EAEJ,SAAU6E,GAGR,SAAS7E,EAAYzF,GACnB,IAAIuK,EAIJ,GAFAA,EAAQD,EAAWE,KAAKvD,KAAMjH,IAAUiH,MAEnCjH,EAAMyK,WACT,MAAM,IAAIC,MAAM,qEAGlB,OAAOH,EAgCT,OA3CAI,IAAelF,EAAa6E,GAcf7E,EAAYmF,UAElBtD,OAAS,WACd,IAAIuD,EAAc5D,KAAKjH,MAEnB8K,GADaD,EAAYJ,WACdI,EAAYC,UACvBjG,EAAOgG,EAAYhG,KACnBE,EAAY8F,EAAY9F,UACxBgG,EAAOC,IAA8BH,EAAa,CAAC,aAAc,WAAY,OAAQ,cAEzF,OAAI5K,IAAMgL,eAAeH,GAChB5K,wBAAcgL,IAAiBC,SAAU,CAC9CzK,MAAO0K,IAAS,GAAInE,KAAKjH,MAAMyK,WAAY,CACzCY,cAAeC,YAAWrE,KAAKjH,MAAO6E,KAExCiG,SAAUA,IAIP5K,wBAAcgL,IAAiBC,SAAU,CAC9CzK,MAAO0K,IAAS,GAAInE,KAAKjH,MAAMyK,WAAY,CACzCY,cAAeC,YAAWrE,KAAKjH,MAAO6E,KAExCiG,SAAU5K,wBAAc6E,EAAWqG,IAAS,GAAIL,EAAM,CACpDD,SAAUA,QAKTrF,EA5CT,CA6CE8D,aAEF9D,EAAY8F,UAAY,CACtB1G,KAAM2G,IAAUC,OAAOC,WACvB3G,UAAW4G,KAEblG,EAAYmG,aAAe,CACzB7G,UAAW,OAEE8G,gBAAcpG","file":"static/js/5.f5fce67c.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { selectApp, setGlobalError } from \"../redux/reducers/appReducer\";\nimport ReactModal from \"react-modal\";\n\nconst mapStateToProps = (state) => ({\n  globalError: selectApp(state).globalError\n})\n\nconst withGlobalError = (WrappedComponent) => {\n  const ComponentWrapper = ({globalError, setGlobalError, ...props}) => {\n    return <>\n      <ReactModal\n        isOpen={!!globalError}\n        onRequestClose={() => setGlobalError(null)}\n      >\n        <h1 style={{color: 'red'}}>{globalError}</h1>\n      </ReactModal>\n      <WrappedComponent {...props} />\n    </>\n  }\n\n  return connect(mapStateToProps, {setGlobalError})(ComponentWrapper)\n}\n\n\nexport default withGlobalError","export const required = (value) => {\n  return value?.length ? null : 'Field is required'\n}\n\nexport const requiredCheckbox = (value) => {\n  return value ? null : 'Checkbox is required'\n}\n\nexport const email = (value) => {\n  return value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? 'Email Field is invalid' : null\n}\n\nexport const maxLength = (max) => (value) => {\n  return value.length <= max ? null : `Field has exceeded ${max} characters`\n}\n\nexport const minLength = (min) => (value) => {\n  return value.length >= min ? null : `Field should have at least ${min} characters`\n}","import React from 'react'\nimport cl from './withFormField.module.css'\nimport { getComponentDisplayName } from '../../util/helpers'\n\n\nconst withFormField = (WrappedComponent) => {\n  const WithFormFieldWrapper = ({\n    input,\n    meta: { touched, error },\n    ...props\n  }) => {\n    let fieldClass = cl.field\n    if(touched && error) {\n      fieldClass += ` ${cl.error}`\n    }\n\n    return (\n      <div>\n        <WrappedComponent className={fieldClass} {...input} {...props} />\n        {\n          touched && error && \n            (<div className={cl.errorMsg}>\n              {error}\n            </div>)\n        }\n      </div>\n    )\n  }\n  WithFormFieldWrapper.displayName = `WithFormFieldWrapper(${getComponentDisplayName(WrappedComponent)})`;\n  \n  return WithFormFieldWrapper;\n}\n\nexport default withFormField","import withFormField from \"../../../hoc/withFormField/withFormField\";\nimport React from \"react\";\n\nexport const InputFormField = withFormField((props) => <input {...props} />)\nexport const TextAreaFormField = withFormField((props) => <textarea {...props} />)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"withFormField_field__s2rEd\",\"error\":\"withFormField_error__1k8i1\",\"errorMsg\":\"withFormField_errorMsg__3Jv8t\"};","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { Redirect } from \"react-router-dom\"\nimport { getComponentDisplayName } from \"../util/helpers\"\nimport Preloader from \"../components/UI/Preloader/Preloader\"\nimport { selectAuth, selectAuthorizedUserId } from \"../redux/reducers/authReducer\"\n\nconst mapStateToProps = (state) => ({\n  authorizedUserId: selectAuthorizedUserId(state),\n  isFetchingLogout: selectAuth(state).isFetchingLogout\n})\n\nexport const withAuth = (WrappedComponent) => {\n  const WithAuthWrapper = (props) => {\n    if(!props.authorizedUserId) return <Redirect to=\"/login\" />\n    \n    if(props.isFetchingLogout) return <Preloader />\n\n    return <WrappedComponent {...props} />\n  }\n  WithAuthWrapper.displayName = `WithAuthWrapper(${getComponentDisplayName(WrappedComponent)})`;\n\n  return connect(mapStateToProps)(WithAuthWrapper)\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__3SvGs\",\"avatar\":\"ProfileInfo_avatar__ZRn66\",\"banner\":\"ProfileInfo_banner__2E1Kn\",\"contactItem\":\"ProfileInfo_contactItem__RWJ0B\",\"profileDescription\":\"ProfileInfo_profileDescription__b5rGp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"Profile_banner__27JBv\",\"avatar\":\"Profile_avatar__1x6mk\",\"item\":\"Profile_item__3B9Do\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionButtons\":\"ProfileStatus_actionButtons__2iiLW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postList\":\"PostList_postList__17ZLL\",\"item\":\"PostList_item__22S9e\",\"likes\":\"PostList_likes__22mtp\"};","import React, { Component, useState } from 'react'\nimport cl from './ProfileStatus.module.css'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { selectProfile, updateProfileStatus } from '../../../../../redux/reducers/profileReducer'\nimport Preloader from '../../../../UI/Preloader/Preloader'\n\nconst ProfileStatus = ({status, isFetchingStatus, isMyOwnProfile, updatingStatusError, updateProfileStatus}) => {\n  const [isEdittingMode, setIsEdittingMode] = useState(false);\n  const [inputStatus, setInputStatus] = useState(status);\n\n  const onDoubleClick = () => {\n    if(isMyOwnProfile) {\n      setIsEdittingMode(true);\n    }\n  }\n\n  const onStatusChange = (e) => {\n    setInputStatus(e.target.value)\n  }\n\n  const onSaveStatus = (e) => {\n    e.stopPropagation()\n    if(inputStatus !== status) {\n      updateProfileStatus(inputStatus)\n    }\n    setIsEdittingMode(false);\n  }\n\n  const onCancelStatus = (e) => {\n    e.stopPropagation()\n    setIsEdittingMode(false);\n    setInputStatus(status)\n  }\n\n  if(isFetchingStatus) return <Preloader />\n\n  return (\n    <div onDoubleClick={onDoubleClick}>\n      <b>Profile Status:</b>{' '}\n      {\n        isEdittingMode\n          ? <>\n            <input autoFocus onChange={onStatusChange} value={inputStatus} />\n            <div className={cl.actionButtons}>\n              <button onClick={onSaveStatus}>Save</button>\n              <button onClick={onCancelStatus}>Cancel</button>\n            </div>\n          </> \n          : <span>\n          {status || '---'}\n        </span>\n      }\n      {!!updatingStatusError && (\n        <div>\n          <span style={{color: 'red'}}>{updatingStatusError}</span>\n        </div>\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  isFetchingStatus: selectProfile(state).isFetchingStatus,\n});\n\nconst mapDispatchToProps = {\n  updateProfileStatus,\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n)(ProfileStatus)","import React from 'react'\nimport { Field, FormSection, reduxForm } from 'redux-form'\nimport { InputFormField, TextAreaFormField } from '../../../UI/FormFields/FormFields'\nimport { required } from '../../../../util/formValidations'\nimport { capitalizeFirstLetter } from '../../../../util/helpers'\nimport { PROFILE_FORM } from '../../../../util/formConstants'\nimport cl from './ProfileInfo.module.css'\nimport Preloader from '../../../UI/Preloader/Preloader'\n\nconst ContactForm = ({contacts}) => {\n  return Object.keys(contacts).map(contact => (\n    <div key={contact} className={cl.contactItem}>\n      <b>{capitalizeFirstLetter(contact)}</b>\n      <Field name={contact} type=\"text\" component={InputFormField} />\n    </div>\n  ))\n}\n\nconst ProfileInfoForm = ({handleSubmit, error, contacts, isUpdatingProfile, onDisableEdittingMode, ...props}) => {\n  return (\n    !isUpdatingProfile ? <form onSubmit={handleSubmit}>\n      <div>\n        <b>\n          Full name:\n        </b>\n        <Field name=\"fullName\" validate={[required]} type=\"text\" component={InputFormField} />\n      </div>\n      <div>\n        <b>\n          About me:\n        </b>\n        <Field name=\"aboutMe\" validate={[required]} type=\"text\" component={InputFormField} />\n      </div>\n      <div>\n        <b>\n          Looking for a job:\n        </b>\n        <Field name=\"lookingForAJob\" type=\"checkbox\" component={InputFormField} />\n      </div>\n      <div>\n        <b>\n          Professional skills:\n        </b>\n        <Field name=\"lookingForAJobDescription\" validate={[required]} type=\"text\" component={TextAreaFormField} />\n      </div>\n      <div>\n        <b>\n          Contacts:\n        </b>\n        <FormSection name='contacts'>\n          <ContactForm contacts={contacts} />\n        </FormSection>\n      </div>\n      <div>\n        <button>Save Profile</button>\n        <button onClick={(e) => {\n          e.stopPropagation()\n          onDisableEdittingMode()\n        }}>Cancel</button>\n      </div>\n      {error && <div className='form-error'>\n        {error}\n      </div>}\n    </form>\n    : <Preloader />\n  )\n}\n\nexport default reduxForm({\n  form: PROFILE_FORM,\n})(ProfileInfoForm) ","import React from 'react'\nimport cl from './ProfileInfo.module.css'\nimport { capitalizeFirstLetter } from '../../../../util/helpers'\n\nconst ContactItemInfo = ({contactField, contactValue} = {}) => {\n  return (\n    contactValue && <div className={cl.contactItem}>\n      <b>{capitalizeFirstLetter(contactField)}: </b>\n      {contactValue}\n    </div>\n  )\n}\n\nconst ProfileDescription = ({profileInfo, isMyOwnProfile, onEnableEdittingMode}) => {\n  const { fullName, lookingForAJob, lookingForAJobDescription, contacts, aboutMe } = profileInfo\n\n  return (\n    <div>\n      {fullName && (<div>\n        <b>Full name: </b>\n        {fullName}\n      </div>)}\n      {aboutMe && (<div>\n        <b>About me: </b>\n        {aboutMe}\n      </div>)}\n      <div>\n        <b>Looking for a job: </b>\n        {lookingForAJob ? 'yes' : 'no'}\n      </div>\n      {lookingForAJobDescription && (<div>\n          <b>My professional skills: </b>\n          {lookingForAJobDescription}\n        </div>)}\n      {\n        Object.keys(contacts).some(contactKey => contacts[contactKey]) && <div>\n          <b>Contacts: </b>\n          {Object.keys(contacts).map((contactKey) => <ContactItemInfo key={contactKey} contactField={contactKey} contactValue={contacts[contactKey]} />)}\n        </div>\n      }\n     {isMyOwnProfile && <div>\n        <button onClick={onEnableEdittingMode} >Edit Profile</button>\n      </div>}\n    </div>\n  )\n}\n\nexport default ProfileDescription","import React from 'react'\nimport cl from './ProfileInfo.module.css'\nimport avatar from '../../../../assets/user.png'\nimport { connect } from 'react-redux'\nimport { selectProfile } from '../../../../redux/reducers/profileReducer'\nimport Preloader from '../../../UI/Preloader/Preloader'\nimport { updateProfileAvatar } from '../../../../redux/reducers/profileReducer'\n\nconst ProfileAvatar = ({profileAvatar, isUpdatingAvatar, updateProfileAvatar, isMyOwnProfile}) => {\n  if(isUpdatingAvatar) return <Preloader />\n\n  return (\n    <div className={cl.avatar}>\n    <img src={profileAvatar || avatar} />\n    {\n      isMyOwnProfile && <div>\n        <input type='file' onChange={(e) => {\n          if(e.target.files[0]) {\n            updateProfileAvatar(e.target.files[0])\n          }\n        }} />\n      </div> \n    }\n  </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  profileAvatar: selectProfile(state).profileAvatar,\n  isUpdatingAvatar: selectProfile(state).isUpdatingAvatar,\n})\n\nexport default connect(mapStateToProps, {updateProfileAvatar})(ProfileAvatar)","import React, { PureComponent, memo } from 'react'\nimport cl from './ProfileInfo.module.css'\n\nimport ProfileStatus from './ProfileStatus/ProfileStatus'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport Preloader from '../../../UI/Preloader/Preloader'\nimport { selectAuthorizedUserId } from '../../../../redux/reducers/authReducer'\nimport { selectProfile, updateProfile } from '../../../../redux/reducers/profileReducer'\nimport ProfileInfoForm from './ProfileInfoForm'\nimport ProfileDescription from './ProfileDescription'\nimport ProfileAvatar from './ProfileAvatar'\n\n\n\nclass ProfileInfo extends PureComponent {\n  state = {\n    isEdittingMode: false,\n  }\n\n  onEnableEdittingMode = () => {\n    this.setState({\n      isEdittingMode: true\n    })\n  }\n\n  onDisableEdittingMode = () => {\n    this.setState({\n      isEdittingMode: false\n    })\n  }\n\n  onSubmit = (data) => {\n    this.props.updateProfile(data).then(() => {\n      this.setState({isEdittingMode: false})\n    })\n  }\n\n\n  render() {\n    const {profileInfo: {photos, ...profileInfo}, status, authorizedUserId, isUpdatingProfile, updatingStatusError} = this.props;\n    const isMyOwnProfile = authorizedUserId === profileInfo.userId\n    const { isEdittingMode } = this.state;\n  \n\n    return (\n      <>\n          <div className={cl.profileInfo}>\n            <ProfileAvatar isMyOwnProfile={isMyOwnProfile} />\n            <div>\n              <ProfileStatus key={`${status}${updatingStatusError || ''}`} updatingStatusError={updatingStatusError} status={status} isMyOwnProfile={isMyOwnProfile} />\n              <div className={cl.profileDescription}>\n                {\n                  isEdittingMode\n                  ? <ProfileInfoForm contacts={profileInfo.contacts} onDisableEdittingMode={this.onDisableEdittingMode} isUpdatingProfile={isUpdatingProfile} onSubmit={this.onSubmit} initialValues={profileInfo} /> \n                  : <ProfileDescription isMyOwnProfile={isMyOwnProfile} onEnableEdittingMode={this.onEnableEdittingMode} profileInfo={profileInfo} />               \n                }\n                \n              </div>\n              \n            </div>\n        </div>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  profileInfo: selectProfile(state).profileInfo,\n  isUpdatingProfile: selectProfile(state).isUpdatingProfile,\n  authorizedUserId: selectAuthorizedUserId(state),\n  status: selectProfile(state).status,\n  updatingStatusError: selectProfile(state).updatingStatusError,\n});\n\nexport default compose(\n  connect(mapStateToProps, {updateProfile})\n)(ProfileInfo)","import React, { memo } from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { InputFormField } from '../../../UI/FormFields/FormFields'\nimport { maxLength, required } from '../../../../util/formValidations'\nimport { POST_FORM } from '../../../../util/formConstants'\n\nconst maxLength20 = maxLength(20)\n\nlet PostForm = memo(({handleSubmit, pristine, invalid}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field validate={[required, maxLength20]} type=\"text\" name=\"post\" component={InputFormField} />\n      </div>\n      <div>\n        <button disabled={pristine || invalid}>Add Post</button>\n      </div>\n    </form>\n  )\n})\n\nPostForm = reduxForm({\n  form: POST_FORM,\n})(PostForm)\n\nexport default PostForm;","import React, { memo } from 'react'\nimport cl from './PostList.module.css'\nimport { addPost, selectProfile } from '../../../../redux/reducers/profileReducer'\nimport { connect } from 'react-redux'\nimport PostForm from './PostForm'\n\n\nconst PostItem = ({content, likesCount}) => {\n  return (\n    <div className={cl.item}>\n      <img src=\"https://images.unsplash.com/photo-1615751072497-5f5169febe17?q=80&w=1000&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8Y3V0ZSUyMGRvZ3xlbnwwfHwwfHx8MA%3D%3D\" />\n      {content}\n      <div className={cl.likes}>\n        Likes {likesCount}\n      </div>\n    </div>\n\n  )\n}\n\nconst PostList = memo(({posts, addPost}) => {\n  const onSubmit = (formData) => {\n    addPost(formData.post)\n  }\n\n  return (\n    <div className={cl.postList}>\n      <h3>\n        My Posts\n      </h3>\n      <PostForm onSubmit={onSubmit} />\n      {posts.map(({content, likesCount, id}) => <PostItem content={content} likesCount={likesCount} key={id} />)}\n    </div>\n  )\n})\n\nconst mapStateToProps = (state) => ({\n  posts: selectProfile(state).posts,\n});\n\nconst mapDispatchToProps = {\n  addPost,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostList)","import React from 'react'\nimport cl from './Profile.module.css'\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\nimport PostLists from './PostList/PostList'\nimport { Redirect } from 'react-router-dom'\nimport Preloader from '../../UI/Preloader/Preloader'\n\nconst Profile = ({isFetchingProfile, profileInfo}) => {\n\n  return (\n    isFetchingProfile || !profileInfo ? <Preloader /> :\n      <div>\n        <ProfileInfo />\n        <PostLists />\n      </div>\n  )\n}\n\nexport default Profile\n","import { withAuth } from \"../../../hoc/withAuth\";\nimport Profile from \"./Profile\";\n\nconst ProfileWithAuth = withAuth(Profile);\n\nexport default ProfileWithAuth;\n","import React from 'react'\nimport Profile from './Profile'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { getProfile, getProfileStatus, selectProfile, setIsFetchingProfile, setProfileInfo } from '../../../redux/reducers/profileReducer';\nimport Preloader from '../../UI/Preloader/Preloader';\nimport { compose } from 'redux';\nimport { withAuth } from '../../../hoc/withAuth';\nimport { selectAuthorizedUserId, setAuthorizedUserId } from '../../../redux/reducers/authReducer';\nimport ProfileWithAuth from './ProfileWithAuth';\nimport withGlobalError from '../../../hoc/withGlobalError';\n\nclass ProfileContainer extends React.Component {\n\n  componentDidMount() {\n    this._initProfile()\n  }\n\n  componentDidUpdate(prevProps) {\n    if(prevProps.match.params?.id !== this.props.match.params?.id) {\n      this._initProfile()\n    }\n  }\n\n  _initProfile() {\n    const userId = this._getUserId()\n    if(userId) {\n      this.props.getProfile(userId)\n      this.props.getProfileStatus(userId)\n    }\n  }\n\n  _getUrlId() {\n    return this.props.match.params?.id;\n  }\n\n  _getUserId() {\n    let userId = this._getUrlId();\n    if(!userId) {\n      userId = this.props.authorizedUserId;\n    }\n    return userId;\n  }\n\n  render() {\n    const {authorizedUserId, getProfile, getProfileStatus, ...props} = this.props\n    return (\n      this._getUrlId() ?\n        <Profile {...props} /> :\n        <ProfileWithAuth {...props} />\n    ) \n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isFetchingProfile: selectProfile(state).isFetchingProfile,\n  profileInfo: selectProfile(state).profileInfo,\n  authorizedUserId: selectAuthorizedUserId(state),\n})\n\nconst mapDispatchToProps = {\n  getProfile,\n  getProfileStatus,\n}\n\nexport default compose(\n  withGlobalError,\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps),\n)(ProfileContainer)","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React, { createElement, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport prefixName from './util/prefixName';\nimport { withReduxForm, ReduxFormContext } from './ReduxFormContext';\nimport validateComponentProp from './util/validateComponentProp';\n\nvar FormSection =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(FormSection, _Component);\n\n  function FormSection(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    if (!props._reduxForm) {\n      throw new Error('FormSection must be inside a component decorated with reduxForm()');\n    }\n\n    return _this;\n  }\n\n  var _proto = FormSection.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _reduxForm = _this$props._reduxForm,\n        children = _this$props.children,\n        name = _this$props.name,\n        component = _this$props.component,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"_reduxForm\", \"children\", \"name\", \"component\"]);\n\n    if (React.isValidElement(children)) {\n      return createElement(ReduxFormContext.Provider, {\n        value: _extends({}, this.props._reduxForm, {\n          sectionPrefix: prefixName(this.props, name)\n        }),\n        children: children\n      });\n    }\n\n    return createElement(ReduxFormContext.Provider, {\n      value: _extends({}, this.props._reduxForm, {\n        sectionPrefix: prefixName(this.props, name)\n      }),\n      children: createElement(component, _extends({}, rest, {\n        children: children\n      }))\n    });\n  };\n\n  return FormSection;\n}(Component);\n\nFormSection.propTypes = {\n  name: PropTypes.string.isRequired,\n  component: validateComponentProp\n};\nFormSection.defaultProps = {\n  component: 'div'\n};\nexport default withReduxForm(FormSection);"],"sourceRoot":""}