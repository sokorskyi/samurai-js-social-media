{"version":3,"sources":["hoc/withGlobalError.jsx","components/MainContent/Users/Users.module.css","components/UI/Pagination/Pagination.module.css","components/MainContent/Users/UserItem.jsx","components/MainContent/Users/Users.jsx","components/UI/Pagination/PaginationItem.jsx","components/UI/Pagination/Pagination.jsx","util/pagination.js","components/MainContent/Users/UsersContainer.jsx"],"names":["mapStateToProps","state","globalError","selectApp","withGlobalError","WrappedComponent","connect","setGlobalError","_ref","props","React","createElement","Fragment","ReactModal","isOpen","onRequestClose","style","color","module","exports","UserItem","_user$photos","user","authorizedUserId","followingInProgressIds","togglefollowUser","followActionName","followed","NavLink","to","concat","id","src","photos","small","defaultAvatarPng","alt","className","cl","userPhoto","disabled","includes","onClick","follow","name","status","Users","userList","isFetching","Preloader","map","u","key","PaginationItem","page","onPageSelect","Object","assign","Pagination","memo","limit","pagePortionLimit","totalItems","selectedPage","swappedPagePortionCount","setSwappedPagePortionCount","useState","pageCount","useMemo","getPageCount","Math","ceil","pageList","i","push","getPageList","startPagePortionPoint","endPagePortionPoint","lastSwappedPagePortionCount","paginationBlock","filter","p","active","UsersApiContainer","Component","constructor","arguments","async","currentPage","this","setCurrentPage","getUsers","componentDidMount","componentWillUnmount","render","totalUsers","mapDispatchToProps","UsersContainer","compose","selectUsers","selectAuthorizedUserId"],"mappings":"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","file":"static/js/8.f8bc4260.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { selectApp, setGlobalError } from \"../redux/reducers/appReducer\";\nimport ReactModal from \"react-modal\";\n\nconst mapStateToProps = (state) => ({\n  globalError: selectApp(state).globalError\n})\n\nconst withGlobalError = (WrappedComponent) => {\n  const ComponentWrapper = ({globalError, setGlobalError, ...props}) => {\n    return <>\n      <ReactModal\n        isOpen={!!globalError}\n        onRequestClose={() => setGlobalError(null)}\n      >\n        <h1 style={{color: 'red'}}>{globalError}</h1>\n      </ReactModal>\n      <WrappedComponent {...props} />\n    </>\n  }\n\n  return connect(mapStateToProps, {setGlobalError})(ComponentWrapper)\n}\n\n\nexport default withGlobalError","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__wopQV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationBlock\":\"Pagination_paginationBlock__nKAls\",\"active\":\"Pagination_active__S-FRi\"};","import React from 'react'\nimport defaultAvatarPng from '../../../assets/user.png'\nimport cl from './Users.module.css'\nimport { NavLink } from 'react-router-dom';\n\nconst UserItem = ({user, authorizedUserId, followingInProgressIds, togglefollowUser}) => {\n  const followActionName = user.followed ? 'Unfollow' : 'Follow';\n  \n  return (\n    (<div>\n      <span>\n          <div>\n              <NavLink to={`/profile/${user.id}`}>\n                <img src={user.photos?.small || defaultAvatarPng} alt=\"\" className={cl.userPhoto}/>\n              </NavLink>\n          </div>\n          <div>\n          {!!authorizedUserId && <button disabled={followingInProgressIds.includes(user.id)} onClick={() => {\n                    const follow = {\n                      ['Unfollow']: false,\n                      ['Follow']: true,\n                    }[followActionName];\n                    togglefollowUser(user.id, follow)\n                  }}>{followActionName}</button>}\n          </div>\n      </span>\n      <span>\n          <span>\n              <div>{user.name}</div>\n              <div>{user.status}</div>\n              <div>{user.id}</div>\n          </span>\n          <span>\n              {/* <div>{user.location.country}</div>\n              <div>{user.location.city}</div> */}\n          </span>\n      </span>\n  </div>)\n  )\n}\n\nexport default UserItem","import React from \"react\";\nimport cl from './Users.module.css'\nimport Preloader from \"../../UI/Preloader/Preloader\";\nimport UserItem from \"./UserItem\";\n\n\nconst Users = ({userList, authorizedUserId, togglefollowUser, isFetching, followingInProgressIds}) => {\n    return (\n      <div>\n        \n        {\n        isFetching \n          ? <Preloader /> \n          : \n          <>\n            {\n            userList.map(u => <UserItem \n              key={u.id} \n              authorizedUserId={authorizedUserId}\n              user={u} \n              followingInProgressIds={followingInProgressIds} \n              togglefollowUser={togglefollowUser} \n            />)\n            }\n          </>\n          \n        }\n          \n      </div>\n    )\n}\n\nexport default Users;\n","import React from 'react'\nimport cl from './Pagination.module.css'\n\nconst PaginationItem = ({page, onPageSelect, ...props}) => {\n  return (\n    <button onClick={onPageSelect} {...props}>\n      {page}\n    </button>\n  )\n}\n\nexport default PaginationItem","import React, { useMemo } from \"react\";\nimport cl from './Pagination.module.css'\nimport { getPageCount, getPageList } from \"../../../util/pagination\";\nimport PaginationItem from \"./PaginationItem\";\nimport { useState } from \"react\";\nimport { memo } from \"react\";\n\nconst Pagination = memo(({limit, pagePortionLimit = 10, totalItems, selectedPage, onPageSelect}) => {\n\n  const [swappedPagePortionCount, setSwappedPagePortionCount] = useState(0);\n\n  const pageCount = useMemo(() => getPageCount(totalItems, limit), [totalItems, limit]) \n  const pageList = useMemo(() => getPageList(pageCount), [pageCount]);\n\n  const startPagePortionPoint = useMemo(\n    () => swappedPagePortionCount * pagePortionLimit + 1, \n  [pagePortionLimit, swappedPagePortionCount]);\n\n  const endPagePortionPoint = useMemo(\n    () => (swappedPagePortionCount + 1) * pagePortionLimit, \n  [swappedPagePortionCount, pagePortionLimit]);\n\n  const lastSwappedPagePortionCount = useMemo(\n    () => Math.ceil(pageCount / pagePortionLimit) - 1, \n    [pageCount, pagePortionLimit]\n  );\n\n  return (\n    <div className={cl.paginationBlock}>\n      {\n        swappedPagePortionCount > 0 && <button onClick={() => setSwappedPagePortionCount(swappedPagePortionCount - 1)} >Previous</button>\n      }\n      {\n        pageList.filter(p => p >= startPagePortionPoint && p <= endPagePortionPoint).map(p => (\n          <PaginationItem key={p} page={p} onClick={() => onPageSelect(p)} className={selectedPage === p ? cl.active : null} />\n        ))\n      }\n      {\n        swappedPagePortionCount < lastSwappedPagePortionCount && <button onClick={() => setSwappedPagePortionCount(swappedPagePortionCount + 1)} >Next</button>\n      }\n    </div>\n  )\n})\n\nexport default Pagination","export const getPageCount = (totalItems, limit) => Math.ceil(totalItems / limit);\n\nexport const getPageList = (pageCount) => {\n  const pageList = [];\n  for(let i = 1; i <= pageCount; i++) {\n    pageList.push(i)\n  }\n  return pageList\n}","import { connect } from \"react-redux\";\nimport React from \"react\";\nimport { togglefollowUser, setCurrentPage, getUsers, selectUsers } from \"../../../redux/reducers/usersReducer\";\nimport Users from \"./Users\";\nimport Pagination from \"../../UI/Pagination/Pagination\";\nimport { selectAuthorizedUserId } from \"../../../redux/reducers/authReducer\";\nimport { compose } from \"redux\";\nimport withGlobalError from \"../../../hoc/withGlobalError\";\n\nclass UsersApiContainer extends React.Component {\n\n  onPageSelect = async (currentPage, limit) => {\n    this.props.setCurrentPage(currentPage);\n    await this.props.getUsers(currentPage, limit)\n  }\n\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.limit)\n  }\n\n  componentWillUnmount() {\n    this.props.setCurrentPage(1);\n  }\n\n  render() {\n    const {limit, currentPage, totalUsers, ...props} = this.props;\n\n    return (\n      <>\n        <Pagination pagePortionLimit={10} onPageSelect={(p) => this.onPageSelect(p, limit)} selectedPage={currentPage} limit={limit} totalItems={totalUsers} />\n        <Users {...props} />\n      </>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => ({\n  userList: selectUsers(state).userList,\n  isFetching: selectUsers(state).isFetching,\n  currentPage: selectUsers(state).currentPage,\n  limit: selectUsers(state).limit,\n  totalUsers: selectUsers(state).totalUsers,\n  followingInProgressIds: selectUsers(state).followingInProgressIds,\n  authorizedUserId: selectAuthorizedUserId(state),\n});\n\nconst mapDispatchToProps = {\n  setCurrentPage,\n  getUsers,\n  togglefollowUser,\n}\n\nconst UsersContainer = compose(\n    withGlobalError,\n    connect(mapStateToProps, mapDispatchToProps)\n  )(UsersApiContainer)\n\nexport default UsersContainer;"],"sourceRoot":""}