{"version":3,"sources":["hoc/withGlobalError.jsx","util/formValidations.js","hoc/withFormField/withFormField.jsx","components/UI/FormFields/FormFields.jsx","hoc/withFormField/withFormField.module.css","hoc/withAuth.jsx","components/MainContent/Messages/ChatMessages/ChatMessages.module.css","components/MainContent/Messages/Messages.module.css","components/MainContent/Messages/UserChatList/UserChatList.module.css","components/MainContent/Messages/ChatMessages/ChatMessageForm.jsx","components/MainContent/Messages/ChatMessages/ChatMessages.jsx","components/MainContent/Messages/UserChatList/UserChatList.jsx","components/MainContent/Messages/Messages.jsx"],"names":["mapStateToProps","state","globalError","selectApp","withGlobalError","WrappedComponent","connect","setGlobalError","_ref","props","React","createElement","Fragment","ReactModal","isOpen","onRequestClose","style","color","required","value","length","email","test","maxLength","max","concat","minLength","min","withFormField","WithFormFieldWrapper","input","meta","touched","error","fieldClass","cl","field","Object","assign","className","errorMsg","displayName","getComponentDisplayName","InputFormField","TextAreaFormField","module","exports","authorizedUserId","selectAuthorizedUserId","isFetchingLogout","selectAuth","withAuth","WithAuthWrapper","Preloader","Redirect","to","maxLength30","ChatMessageForm","handleSubmit","pristine","invalid","onSubmit","chatMessagesForm","Field","name","type","validate","component","disabled","reduxForm","form","CHAT_MESSAGES_FORM","MessageItem","from","message","messageItem","src","ChatMessages","memo","_ref2","myMessages","strangerMessages","addMessage","getMessageList","useCallback","messages","map","_ref3","id","key","messageContainer","formData","mapDispatchToProps","selectMyMessages","selectStrangerMessages","UserChatItem","text","link","chatItem","NavLink","activeClassName","active","UserChatList","chats","userChatList","selectChat","compose","messagesContainer"],"mappings":"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","file":"static/js/6.571a1562.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { selectApp, setGlobalError } from \"../redux/reducers/appReducer\";\nimport ReactModal from \"react-modal\";\n\nconst mapStateToProps = (state) => ({\n  globalError: selectApp(state).globalError\n})\n\nconst withGlobalError = (WrappedComponent) => {\n  const ComponentWrapper = ({globalError, setGlobalError, ...props}) => {\n    return <>\n      <ReactModal\n        isOpen={!!globalError}\n        onRequestClose={() => setGlobalError(null)}\n      >\n        <h1 style={{color: 'red'}}>{globalError}</h1>\n      </ReactModal>\n      <WrappedComponent {...props} />\n    </>\n  }\n\n  return connect(mapStateToProps, {setGlobalError})(ComponentWrapper)\n}\n\n\nexport default withGlobalError","export const required = (value) => {\n  return value?.length ? null : 'Field is required'\n}\n\nexport const requiredCheckbox = (value) => {\n  return value ? null : 'Checkbox is required'\n}\n\nexport const email = (value) => {\n  return value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? 'Email Field is invalid' : null\n}\n\nexport const maxLength = (max) => (value) => {\n  return value.length <= max ? null : `Field has exceeded ${max} characters`\n}\n\nexport const minLength = (min) => (value) => {\n  return value.length >= min ? null : `Field should have at least ${min} characters`\n}","import React from 'react'\nimport cl from './withFormField.module.css'\nimport { getComponentDisplayName } from '../../util/helpers'\n\n\nconst withFormField = (WrappedComponent) => {\n  const WithFormFieldWrapper = ({\n    input,\n    meta: { touched, error },\n    ...props\n  }) => {\n    let fieldClass = cl.field\n    if(touched && error) {\n      fieldClass += ` ${cl.error}`\n    }\n\n    return (\n      <div>\n        <WrappedComponent className={fieldClass} {...input} {...props} />\n        {\n          touched && error && \n            (<div className={cl.errorMsg}>\n              {error}\n            </div>)\n        }\n      </div>\n    )\n  }\n  WithFormFieldWrapper.displayName = `WithFormFieldWrapper(${getComponentDisplayName(WrappedComponent)})`;\n  \n  return WithFormFieldWrapper;\n}\n\nexport default withFormField","import withFormField from \"../../../hoc/withFormField/withFormField\";\nimport React from \"react\";\n\nexport const InputFormField = withFormField((props) => <input {...props} />)\nexport const TextAreaFormField = withFormField((props) => <textarea {...props} />)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"withFormField_field__s2rEd\",\"error\":\"withFormField_error__1k8i1\",\"errorMsg\":\"withFormField_errorMsg__3Jv8t\"};","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { Redirect } from \"react-router-dom\"\nimport { getComponentDisplayName } from \"../util/helpers\"\nimport Preloader from \"../components/UI/Preloader/Preloader\"\nimport { selectAuth, selectAuthorizedUserId } from \"../redux/reducers/authReducer\"\n\nconst mapStateToProps = (state) => ({\n  authorizedUserId: selectAuthorizedUserId(state),\n  isFetchingLogout: selectAuth(state).isFetchingLogout\n})\n\nexport const withAuth = (WrappedComponent) => {\n  const WithAuthWrapper = (props) => {\n    if(!props.authorizedUserId) return <Redirect to=\"/login\" />\n    \n    if(props.isFetchingLogout) return <Preloader />\n\n    return <WrappedComponent {...props} />\n  }\n  WithAuthWrapper.displayName = `WithAuthWrapper(${getComponentDisplayName(WrappedComponent)})`;\n\n  return connect(mapStateToProps)(WithAuthWrapper)\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageContainer\":\"ChatMessages_messageContainer__VSmYW\",\"messageItem\":\"ChatMessages_messageItem__2QIAe\",\"myMessages\":\"ChatMessages_myMessages__3nxWD\",\"chatMessagesForm\":\"ChatMessages_chatMessagesForm__3M5Or\",\"strangerMessages\":\"ChatMessages_strangerMessages__2CnA9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesContainer\":\"Messages_messagesContainer__3T7yW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userChatList\":\"UserChatList_userChatList__3mOCT\",\"chatItem\":\"UserChatList_chatItem__1itTd\",\"active\":\"UserChatList_active__j923B\"};","import React from 'react'\nimport cl from './ChatMessages.module.css'\nimport { Field, reduxForm } from 'redux-form'\nimport { TextAreaFormField } from '../../../UI/FormFields/FormFields'\nimport { maxLength, required } from '../../../../util/formValidations'\nimport { CHAT_MESSAGES_FORM } from '../../../../util/formConstants'\n\nconst maxLength30 = maxLength(30)\n\nlet ChatMessageForm = ({handleSubmit, pristine, invalid}) => {\n  return (\n    <form onSubmit={handleSubmit} className={cl.chatMessagesForm}>\n      <div>\n        <Field name=\"message\" type=\"text\" validate={[required, maxLength30]}  component={TextAreaFormField} />\n      </div>\n      <div>\n        <button disabled={pristine || invalid}>Add Message</button>\n      </div>\n    </form>\n  )\n}\n\nChatMessageForm = reduxForm({\n  form: CHAT_MESSAGES_FORM,\n})(ChatMessageForm)\n\nexport default ChatMessageForm;\n","import React, { memo, useCallback } from 'react'\nimport cl from './ChatMessages.module.css'\nimport { connect } from 'react-redux'\nimport { addMessage, selectMyMessages, selectStrangerMessages } from '../../../../redux/reducers/chatReducer'\nimport ChatMessageForm from './ChatMessageForm'\n\nconst MessageItem = ({from, message}) => {\n  return (\n    <div className={cl.messageItem}>\n      <img src=\"https://cdn.pixabay.com/photo/2018/03/31/06/31/dog-3277416_640.jpg\" />\n      {message}\n      <div>\n        {from}\n      </div>\n    </div>\n  )\n}\n\nconst ChatMessages = memo(({myMessages, strangerMessages, addMessage}) => {\n  const onSubmit = (formData) => {\n    addMessage(formData.message)\n  }\n  const getMessageList = useCallback((messages) => {\n    return messages.map(({message, id, from}) => <MessageItem key={id} from={from} message={message} />)\n  }, [])\n\n  return (\n    <div className={cl.messages}>\n      <div className={cl.messageContainer}>\n        <div className={cl.strangerMessages}>\n          {getMessageList(strangerMessages)}\n        </div>\n        <div className={cl.myMessages}>\n          {getMessageList(myMessages)}\n        </div>\n      </div>\n      <ChatMessageForm onSubmit={onSubmit} />\n    </div>\n  )\n})\n\nconst mapStateToProps = (state) => ({\n  myMessages: selectMyMessages(state),\n  strangerMessages: selectStrangerMessages(state),\n})\n\nconst mapDispatchToProps = {\n  addMessage,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatMessages)","import React, {memo} from 'react'\nimport cl from './UserChatList.module.css'\nimport { connect } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport { selectChat } from '../../../../redux/reducers/chatReducer'\n\nconst UserChatItem = ({text, id}) => {\n  const link = `/chats/${id}`\n\n  return (\n    <div className={cl.chatItem}>\n      <NavLink to={link} activeClassName={cl.active}>{text}</NavLink>\n    </div>\n  )\n}\n\nconst UserChatList = memo(({chats}) => {\n\n  return (\n    <div className={cl.userChatList}>\n      {chats.map(({text, id}) => <UserChatItem id={id} text={text} key={id} />)}\n    </div>\n  )\n})\n\nconst mapStateToProps = (state) => ({\n  chats: selectChat(state).chats\n});\n\nexport default connect(mapStateToProps)(UserChatList)","import React from 'react'\nimport cl from './Messages.module.css'\nimport ChatMessages from './ChatMessages/ChatMessages'\nimport UserChatList from './UserChatList/UserChatList'\nimport { withAuth } from '../../../hoc/withAuth'\nimport { compose } from 'redux'\nimport withGlobalError from '../../../hoc/withGlobalError'\n\nconst Messages = ({}) => {\n\n  return (\n    <div>\n      <div className={cl.messagesContainer}>\n        <UserChatList />\n        <ChatMessages />\n      </div>\n    </div>\n  )\n}\n\nexport default compose(\n  withAuth,\n  withGlobalError,\n)(Messages)"],"sourceRoot":""}